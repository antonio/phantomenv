#!/usr/bin/env bash
#
# Summary: Execute a command from a particular PhantomJS version.
#
# Usage: phantomenv exec <command> [<args>]
#
# Puts the current PhantomJS version onto PATH and runs the specified command.

# Bomb out if we hit an error, ever
set -e

# Verbose output in debug mode
[ -n "$PHANTOMENV_DEBUG" ] && {
  set -x
}

# Set the current PhantomJS version
if [ -z "$PHANTOMENV_VERSION" ]; then
  PHANTOMENV_VERSION="$(phantomenv version)"

  # Couldn't infer from a file either
  if [ -z "$PHANTOMENV_VERSION" ]; then
    echo "phantomenv: no \`PHANTOMENV_VERSION' configured" >&2
    exit 1
  fi
fi

# if the specified PhantomJS version lacks this bin, bail
if [ ! -x "$PHANTOMENV_ROOT/versions/$PHANTOMENV_VERSION/bin/$1" ]; then
  echo "phantomenv: \`$1' does not exist for $PHANTOMENV_VERSION" >&2

  for version in "$(phantomenv versions)"; do
    if [ -x "$PHANTOMENV_ROOT/versions/$version/bin/$1" ]; then
      echo "  $version" > &2
    fi
  done

  exit 1
fi

export PHANTOMENV_VERSION

# Put our bindir onto PATH
bindir="$PHANTOMENV_ROOT/versions/$PHANTOMENV_VERSION/bin"

export PATH="$bindir:$PATH"

exec "$@"
